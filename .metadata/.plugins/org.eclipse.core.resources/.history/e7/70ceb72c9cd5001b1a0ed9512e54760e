package products;

import java.util.GregorianCalendar;

public class PerishableProduct extends Product{
	
	
	protected GregorianCalendar expirationDate;

	

	public PerishableProduct(String name, String brand, double price, double quantity,
			GregorianCalendar expirationDate) {
		super(name, brand, price, quantity);
		if(expirationDate == null) throw new IllegalArgumentException();//I just want to make sure that NullReferenceException doesn't occur and that I am aware of the potential problem.
		//If this app accepted user input, I would handle this exception in a better way, by informing a user and making them input a new value.  
		this.expirationDate = expirationDate;
	}

	public GregorianCalendar getExpirationDate() {
		return expirationDate;
	}

	public void setExpirationDate(GregorianCalendar expirationDate) {
		if(expirationDate == null) throw new IllegalArgumentException();
		this.expirationDate = expirationDate;
	}

	@Override
	public double getDiscount(GregorianCalendar purchaseDate) {
		if(isTheSameDay(purchaseDate, expirationDate)) return 0.5;
		
		GregorianCalendar pDClone = (GregorianCalendar) purchaseDate.clone();//If I didn't clone purchase date here, I would add 5 days to it, and it could cause problems later in the program.
		pDClone.add(GregorianCalendar.DAY_OF_MONTH, 5);
		
		if(pDClone.equals(expirationDate) || pDClone.after(expirationDate)) return 0.1;
		return -1;//-1 indicates that there is no discount!
	}
	
	public static boolean isTheSameDay(GregorianCalendar g1,GregorianCalendar g2) {
		return (g1.get(GregorianCalendar.YEAR) == g2.get(GregorianCalendar.YEAR) &&
				g1.get(GregorianCalendar.MONTH) == g2.get(GregorianCalendar.MONTH) &&
				g1.get(GregorianCalendar.DAY_OF_MONTH) == g2.get(GregorianCalendar.DAY_OF_MONTH)
				);		
	}
	
	
	/*public static void main(String[] args) {
		GregorianCalendar g1 = new GregorianCalendar(2021, 7, 23, 6, 15);
		GregorianCalendar g2 = new GregorianCalendar(2021, 7, 23, 10, 15);
		System.out.println(isTheSameDay(g1, g2));
		
	}*/
}
